{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"9GmlAJx0ATW6","executionInfo":{"status":"ok","timestamp":1701546003810,"user_tz":300,"elapsed":277668,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"d453c9d5-c1f4-4d17-bd09-0c506c34678f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-66bb8841-5ad1-4203-a236-ec507f7fc603\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-66bb8841-5ad1-4203-a236-ec507f7fc603\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving auspol2019.csv to auspol2019.csv\n"]}],"source":["from google.colab import files\n","uploaded = files.upload()"]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Specify the file name\n","file_name = 'auspol2019.csv'  # Replace with the actual file name\n","\n","# Read the CSV file into a Pandas DataFrame\n","df = pd.read_csv(file_name)\n","\n","# Display the DataFrame\n","df.head()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":504},"id":"0Jkt8r3ZAh23","executionInfo":{"status":"ok","timestamp":1701551363626,"user_tz":300,"elapsed":3426,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"519e3a12-501a-4309-8ff2-5ec23c0bc2a8"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            created_at                   id  \\\n","0  2019-05-20 09:13:44  1130401208756187136   \n","1  2019-05-20 09:13:43  1130401205367140357   \n","2  2019-05-20 09:13:33  1130401162782371841   \n","3  2019-05-20 09:13:29  1130401143551434753   \n","4  2019-05-20 09:13:23  1130401118666809345   \n","\n","                                           full_text  retweet_count  \\\n","0  After the climate election: shellshocked green...            0.0   \n","1  @narendramodi @smritiirani Coverage of indian ...            0.0   \n","2  @workmanalice Do you know if Facebook is relea...            0.0   \n","3  @vanbadham We all understand we have a compuls...            0.0   \n","4  Shares were mixed in Asia, with India and Aust...            0.0   \n","\n","   favorite_count       user_id          user_name user_screen_name  \\\n","0             0.0  9.248486e+07       PIPELINEPETE         jocksjig   \n","1             0.0  7.756474e+08    Narinder Parmar      nparmar1957   \n","2             0.0  5.687300e+04        Peter Wells       peterwells   \n","3             0.0  9.081660e+17        The Realist    therealist822   \n","4             0.0  5.260074e+08  Inquirer Business      InquirerBiz   \n","\n","                                    user_description  \\\n","0  Retired Tradesman and Progressive Anti Conserv...   \n","1  Life coach & trainer, Motivational speaker, Ma...   \n","2  Writes for @theage and @smh on technology and ...   \n","3  Calls it as I see it. Anti PC, SJW and VS. If ...   \n","4  The official Twitter account of the Inquirer G...   \n","\n","                user_location      user_created_at  \n","0        Brisbane, Queensland  2009-11-25 09:19:45  \n","1  Wollongong, NSW, AUSTRALIA  2012-08-23 10:20:40  \n","2                   Melbourne  2006-12-11 07:38:06  \n","3                         NaN  2017-09-14 03:10:30  \n","4                 Philippines  2012-03-16 03:51:59  "],"text/html":["\n","  <div id=\"df-d63cb56e-16fc-4080-ab93-1c7f949e241f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>created_at</th>\n","      <th>id</th>\n","      <th>full_text</th>\n","      <th>retweet_count</th>\n","      <th>favorite_count</th>\n","      <th>user_id</th>\n","      <th>user_name</th>\n","      <th>user_screen_name</th>\n","      <th>user_description</th>\n","      <th>user_location</th>\n","      <th>user_created_at</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-05-20 09:13:44</td>\n","      <td>1130401208756187136</td>\n","      <td>After the climate election: shellshocked green...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>9.248486e+07</td>\n","      <td>PIPELINEPETE</td>\n","      <td>jocksjig</td>\n","      <td>Retired Tradesman and Progressive Anti Conserv...</td>\n","      <td>Brisbane, Queensland</td>\n","      <td>2009-11-25 09:19:45</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-05-20 09:13:43</td>\n","      <td>1130401205367140357</td>\n","      <td>@narendramodi @smritiirani Coverage of indian ...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>7.756474e+08</td>\n","      <td>Narinder Parmar</td>\n","      <td>nparmar1957</td>\n","      <td>Life coach &amp; trainer, Motivational speaker, Ma...</td>\n","      <td>Wollongong, NSW, AUSTRALIA</td>\n","      <td>2012-08-23 10:20:40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-05-20 09:13:33</td>\n","      <td>1130401162782371841</td>\n","      <td>@workmanalice Do you know if Facebook is relea...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5.687300e+04</td>\n","      <td>Peter Wells</td>\n","      <td>peterwells</td>\n","      <td>Writes for @theage and @smh on technology and ...</td>\n","      <td>Melbourne</td>\n","      <td>2006-12-11 07:38:06</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-05-20 09:13:29</td>\n","      <td>1130401143551434753</td>\n","      <td>@vanbadham We all understand we have a compuls...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>9.081660e+17</td>\n","      <td>The Realist</td>\n","      <td>therealist822</td>\n","      <td>Calls it as I see it. Anti PC, SJW and VS. If ...</td>\n","      <td>NaN</td>\n","      <td>2017-09-14 03:10:30</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-05-20 09:13:23</td>\n","      <td>1130401118666809345</td>\n","      <td>Shares were mixed in Asia, with India and Aust...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5.260074e+08</td>\n","      <td>Inquirer Business</td>\n","      <td>InquirerBiz</td>\n","      <td>The official Twitter account of the Inquirer G...</td>\n","      <td>Philippines</td>\n","      <td>2012-03-16 03:51:59</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d63cb56e-16fc-4080-ab93-1c7f949e241f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d63cb56e-16fc-4080-ab93-1c7f949e241f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d63cb56e-16fc-4080-ab93-1c7f949e241f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-83888cc6-f5b9-461f-acf3-6cead211e07f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83888cc6-f5b9-461f-acf3-6cead211e07f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-83888cc6-f5b9-461f-acf3-6cead211e07f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["import re\n","pattern = re.compile(r'\\.{3}', flags=re.IGNORECASE)\n","\n","count_with_dots = df['full_text'].str.contains(pattern).sum()\n","\n","print(f\"Number of rows with '...': {count_with_dots}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"edFBoF_fDFUf","executionInfo":{"status":"ok","timestamp":1701546028262,"user_tz":300,"elapsed":633,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"f7a2d29a-ebcb-4428-a5f7-4532770d4691"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of rows with '...': 14131\n"]}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pN0KXcR2DMLt","executionInfo":{"status":"ok","timestamp":1701546318027,"user_tz":300,"elapsed":377,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"9646f221-69e6-4a01-ba05-feec82d30805"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of rows with '#auspol': 13496\n","Empty DataFrame\n","Columns: [created_at, id, full_text, retweet_count, favorite_count, user_id, user_name, user_screen_name, user_description, user_location, user_created_at]\n","Index: []\n"]}]},{"cell_type":"code","source":["df = df[~df['full_text'].str.contains(r'\\.{3}', regex=True, case=False)]\n","\n","df.head()\n","print(len(df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rg9xPkCPCbOi","executionInfo":{"status":"ok","timestamp":1701546033177,"user_tz":300,"elapsed":865,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"33339ace-fe4d-432c-ded5-bc853949be12"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["169248\n"]}]},{"cell_type":"code","source":["df['full_text'] = df['full_text'].str.replace('#auspol', '')\n","\n","print(df['full_text'].head)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0LSrKh5eDB6J","executionInfo":{"status":"ok","timestamp":1701546819520,"user_tz":300,"elapsed":396,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"7a893339-0261-47bc-e113-b3f517b138bd"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["<bound method NDFrame.head of 0         After the climate election: shellshocked green...\n","1         @narendramodi @smritiirani Coverage of indian ...\n","2         @workmanalice Do you know if Facebook is relea...\n","3         @vanbadham We all understand we have a compuls...\n","4         Shares were mixed in Asia, with India and Aust...\n","                                ...                        \n","183372    \"We're all learning from each other and it's a...\n","183373    @gorgeousdunny1 Well if he wasn’t cooked befor...\n","183374    #australiavotes; The BANKS are taking your mon...\n","183376    SINCERITY IS A #WINNING #SALES CHARACTERISTIC-...\n","183377    These arrived. No sign of a democracy sausage ...\n","Name: full_text, Length: 169248, dtype: object>\n"]}]},{"cell_type":"code","source":["pattern = re.compile('#auspol', flags=re.IGNORECASE)\n","\n","count_with_auspol = df['full_text'].str.contains(pattern).sum()\n","\n","print(f\"Number of rows with '#auspol': {count_with_auspol}\")\n","\n","auspol_tweets = df[df['full_text'].str.contains('#auspol')].head()\n","\n","print(auspol_tweets)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nbaqdzChF0mq","executionInfo":{"status":"ok","timestamp":1701551381632,"user_tz":300,"elapsed":613,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"965fe135-f1a7-45b6-8495-7f31629ffbe3"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of rows with '#auspol': 119811\n","             created_at                   id  \\\n","6   2019-05-20 09:12:57  1130401009782673408   \n","10  2019-05-20 09:11:28  1130400637487702016   \n","20  2019-05-20 09:07:04  1130399529897844736   \n","23  2019-05-20 09:06:18  1130399338692112389   \n","46  2019-05-20 09:00:50  1130397960166993920   \n","\n","                                            full_text  retweet_count  \\\n","6   It is disappointing that @tanya_plibersek has ...            0.0   \n","10  #auspol Hear, bloody hear. Any party that oppo...            1.0   \n","20  Whatever mistakes Labor made, we know democrac...           25.0   \n","23  Journalists need to get an ironclad guarantee ...            1.0   \n","46  In the wake of the recent election, please wat...            0.0   \n","\n","    favorite_count       user_id            user_name user_screen_name  \\\n","6              0.0  5.100258e+07       Matthew Rimmer         DrRimmer   \n","10             2.0  1.721130e+09          Gary Fallon      GaryFallon2   \n","20            56.0  2.675709e+08           Wayne Swan        SwannyQLD   \n","23             2.0  3.784206e+08  Sandra K Eckersley🔹  SandraEckersley   \n","46             0.0  8.603079e+07      Annabelle Lukin   annabellelukin   \n","\n","                                     user_description         user_location  \\\n","6   Professor of IP & Innovation Law @QUTLaw @QUT_...  Brisbane, Queensland   \n","10  Against all Moronic Right Wing politicians. In...   Melbourne Australia   \n","20  Wayne Swan is the National President of the AL...              Brisbane   \n","23  Writer, Critic, Ideas Broker & Devil's Advocat...      Sydney AUSTRALIA   \n","46  A/Prof in Linguistics, at Macquarie University...     Sydney, Australia   \n","\n","        user_created_at  \n","6   2009-06-26 10:17:54  \n","10  2013-09-02 04:27:56  \n","20  2011-03-17 04:55:00  \n","23  2011-09-23 05:17:47  \n","46  2009-10-29 09:43:03  \n"]}]},{"cell_type":"code","source":["df = df['full_text'] # remove all columns that arent tweets"],"metadata":{"id":"pi64NAXCGh-_","executionInfo":{"status":"ok","timestamp":1701546016391,"user_tz":300,"elapsed":132,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["#!pip install langdetect"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3qZberhYHwW8","executionInfo":{"status":"ok","timestamp":1701111125850,"user_tz":300,"elapsed":5022,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"0b2527ce-8992-488a-8379-930d1dcdadb5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: langdetect in /usr/local/lib/python3.10/dist-packages (1.0.9)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from langdetect) (1.16.0)\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3108, in _dep_map\n","    return self.__dep_map\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2901, in __getattr__\n","    raise AttributeError(attr)\n","AttributeError: _DistInfoDistribution__dep_map\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 169, in exc_logging_wrapper\n","    status = run_func(*args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/req_command.py\", line 242, in wrapper\n","    return func(self, options, args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/commands/install.py\", line 441, in run\n","    conflicts = self._determine_conflicts(to_install)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/commands/install.py\", line 572, in _determine_conflicts\n","    return check_install_conflicts(to_install)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/operations/check.py\", line 101, in check_install_conflicts\n","    package_set, _ = create_package_set_from_installed()\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/operations/check.py\", line 42, in create_package_set_from_installed\n","    dependencies = list(dist.iter_dependencies())\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/metadata/pkg_resources.py\", line 216, in iter_dependencies\n","    return self._dist.requires(extras)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2821, in requires\n","    dm = self._dep_map\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3110, in _dep_map\n","    self.__dep_map = self._compute_dependencies()\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3120, in _compute_dependencies\n","    reqs.extend(parse_requirements(req))\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3173, in __init__\n","    super(Requirement, self).__init__(requirement_string)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/packaging/requirements.py\", line 102, in __init__\n","    req = REQUIREMENT.parseString(requirement_string)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 1131, in parse_string\n","    loc, tokens = self._parse(instring, 0)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3886, in parseImpl\n","    loc, exprtokens = e._parse(instring, loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4114, in parseImpl\n","    return e._parse(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3886, in parseImpl\n","    loc, exprtokens = e._parse(instring, loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4959, in parseImpl\n","    loc, tokens = self_expr._parse(instring, loc, doActions, callPreParse=False)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3886, in parseImpl\n","    loc, exprtokens = e._parse(instring, loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3886, in parseImpl\n","    loc, exprtokens = e._parse(instring, loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 5226, in parseImpl\n","    return super().parseImpl(instring, loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4375, in parseImpl\n","    return self.expr._parse(instring, loc, doActions, callPreParse=False)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3864, in parseImpl\n","    loc, resultlist = self.exprs[0]._parse(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4114, in parseImpl\n","    return e._parse(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4375, in parseImpl\n","    return self.expr._parse(instring, loc, doActions, callPreParse=False)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3864, in parseImpl\n","    loc, resultlist = self.exprs[0]._parse(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4114, in parseImpl\n","    return e._parse(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4114, in parseImpl\n","    return e._parse(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 781, in _parseNoCache\n","    len_instring = len(instring)\n","KeyboardInterrupt\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1732, in isEnabledFor\n","    return self._cache[level]\n","KeyError: 50\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/bin/pip3\", line 8, in <module>\n","    sys.exit(main())\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/main.py\", line 79, in main\n","    return command.main(cmd_args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 101, in main\n","    return self._main(args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 223, in _main\n","    return run(options, args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 206, in exc_logging_wrapper\n","    logger.critical(\"Operation cancelled by user\")\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1523, in critical\n","    if self.isEnabledFor(CRITICAL):\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1736, in isEnabledFor\n","    if self.manager.disable >= level:\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1307, in disable\n","    @property\n","KeyboardInterrupt\n","^C\n"]}]},{"cell_type":"code","source":["#zach already did this\n","#from langdetect import detect\n","\n","\n","# Function to detect language (English)\n","def is_english(text):\n","  try:\n","      return detect(text) == 'en'\n","  except:\n","      return False\n","\n","# Apply the language detection function to filter English rows\n","df = df[df['full_text'].apply(is_english)]\n","\n","# Display the updated DataFrame\n","print(len(df))\n"],"metadata":{"id":"GHU4NZXAG84n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","\n","\n","# Mount Google Drive (if you want to save the file in Google Drive)\n","drive.mount('/content/drive')\n","file_path = '/content/drive/MyDrive/NLP-Political-Polarity/auspol_data_without_auspol.csv'\n","df.to_csv(file_path, index=False)"],"metadata":{"id":"oATfPM_LFRT5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701546390774,"user_tz":300,"elapsed":21995,"user":{"displayName":"Samantha Ying","userId":"11477991005634354570"}},"outputId":"7e579f52-168d-4309-ef69-5ce1c66b141a"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"xxzCYPwzGxsa"},"execution_count":null,"outputs":[]}]}